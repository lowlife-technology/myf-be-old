generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Identity {
  id           String     @id @default(uuid())
  email        String     @unique
  fullName     String    
  password     String     @unique
  token        Token?   
  balances     Balance[]
  bearer       Bearer?
  categories   Category[]
}

model Token {
  id           Int      @id @default(autoincrement())
  token        Int      @unique
  status       String   @default("inactive")
  expireAt     DateTime @default(now())
  identity     Identity @relation(fields: [userId], references: [id]) // doesn't exist!
  userId       String   @unique
}

model Category {
  id                String    @id @default(uuid())
  identity          Identity  @relation(fields: [userId], references: [id]) // doesn't exist!
  userId            String    
  name              String    
  projectedAmount   Decimal   @default(0)
  description       String?
  autoInsert        Boolean   @default(false)
  balanceType       String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @default(now())
  deletedAt         DateTime?
  Balances          Balance[]
}

model Balance {
  id              String    @id @default(uuid())
  amount          Int
  description     String?
  eventDate       DateTime?
  identity        Identity  @relation(fields: [userId], references: [id]) // doesn't exist!
  userId          String    
  category        Category  @relation(fields: [categoryId], references: [id])
  categoryId      String    
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now())
  deletedAt       DateTime?
}

model Bearer {
  id            Int       @id @default(autoincrement())
  token         String
  identity      Identity  @relation(fields: [userId], references: [id])
  userId        String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
  deletedAt     DateTime?
}
