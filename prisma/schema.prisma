generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Identity {
  id           String     @id
  email        String?    @unique
  phone        String?    @unique
  secret       String
  token        Token?
  balances     Balance[]
  bearer       Bearer?
  categories   Category[]
}

model Token {
  id           String   @id
  token        Int      @unique
  status       String   @default("inactive")
  expireAt     String
  identity     Identity? @relation(fields: [identityId], references: [id]) // doesn't exist!
  identityId   String?   @unique
}

model Category {
  id                String    @id @default(uuid())
  identity          Identity  @relation(fields: [identityID], references: [id]) // doesn't exist!
  identityID        String
  name              String
  projectedAmount   Decimal   @default(0)
  description       String?
  autoInsert        Boolean   @default(false)
  balanceType       String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @default(now())
  deletedAt         DateTime?
  Balances          Balance[]
}

model Balance {
  id              String    @id @default(uuid())
  amount          Int
  description     String?
  eventDate       DateTime?
  identity        Identity  @relation(fields: [identityId], references: [id]) // doesn't exist!
  identityId      String
  category        Category  @relation(fields: [categoryId], references: [id])
  categoryId      String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now())
  deletedAt       DateTime?
}

model Bearer {
  id            Int       @id @default(autoincrement())
  token         String
  identity      Identity  @relation(fields: [identityId], references: [id])
  identityId    String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
  deletedAt     DateTime?
}
